version: "3"

services:
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    volumes:
      - ./mqtt-broker/config:/mosquitto/config
      - ./mqtt-broker/data:/mosquitto/data
      - ./mqtt-broker/log:/mosquitto/log
    ports:
      - 1883:1883
      - 9001:9001

  mariadb:
    image: mariadb
    container_name: botnanaDB
    volumes:
      - ./_data/mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
    ports:
      - 23312:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: lttr_phpmyadmin
    links:
      - mariadb
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 8183:80

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    command: ["start-dev", "--http-port", "7080", "--https-port", "7443"]
    environment:
      DB_VENDOR: mariadb
      DB_ADDR: mariadb
      DB_DATABASE: keycloak
      DB_USER: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: $kc_pw
      KEYCLOAK_USER: $kc_user
      KEYCLOAK_PASSWORD: $kc_pw
      KC_LOG_LEVEL: info
    depends_on:
      - mariadb
    ports:
      - "7080:7080"
      - "8443:8443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15

  logstash:
    build:
      context: docker/logstash
    env_file: .env
    links:
      - elasticsearch
    ports:
      - "5044:5044"
      - "5400:5400"
    volumes:
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/pipelines/:/usr/share/logstash/pipeline/
      - ./logstash/queries/:/usr/share/logstash/config/queries/
      - ./logs.txt:/data/logs.txt
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - discovery.type=single-node
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    labels:
      co.elastic.logs/enabled: false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 9200:9200

  kibana:
    labels:
      co.elastic.logs/enabled: false
    image: docker.elastic.co/kibana/kibana:8.17.2
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - 5601:5601

volumes:
  mysql_data:
    driver: local
